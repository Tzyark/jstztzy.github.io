<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jstztzy&#39;s Blog</title>
  <icon>https://www.gravatar.com/avatar/5baa8ae6fa4b185fe675baab98e20b33</icon>
  <subtitle>吾于冥河沉浮，受尽命运捉弄，纵然汝将忘吾，吾亦伴汝身旁。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://jstztzy.github.io/"/>
  <updated>2017-09-22T10:59:48.623Z</updated>
  <id>http://jstztzy.github.io/</id>
  
  <author>
    <name>Jstztzy</name>
    <email>jstztzy@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Educational Codeforces Round 28</title>
    <link href="http://jstztzy.github.io/2017/09/22/Educational-Codeforces-Round-28/"/>
    <id>http://jstztzy.github.io/2017/09/22/Educational-Codeforces-Round-28/</id>
    <published>2017-09-22T10:59:00.000Z</published>
    <updated>2017-09-22T10:59:48.623Z</updated>
    
    <content type="html"><![CDATA[<p>#<center><a href="http://codeforces.com/problemset/problem/846/A" target="_blank" rel="external">846A. Curriculum Vitae</a></center></p><p>##题意<br>给定一个长度为$n$的$01$序列，删掉一些数，使得最终数列中$0$不直接跟在$1$后面，求最长长度。</p><p>##题解<br>最终序列一定是$000…111$形式的，$\Theta(n)$枚举最后一个$0$的位置，用前缀和$\Theta(1)$统计一下即可。<br>时间复杂度：$\Theta(n)$。</p><p>##代码<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">109</span>;</div><div class="line"><span class="keyword">int</span> s[N];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> s = <span class="number">1</span>, a = <span class="number">0</span>; <span class="keyword">char</span> ch = getchar();</div><div class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) s = <span class="number">-1</span>; ch = getchar();&#125;</div><div class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">'0'</span> &amp;&amp; ch &lt;= <span class="string">'9'</span>) &#123;a = a * <span class="number">10</span> + ch - <span class="string">'0'</span>; ch = getchar();&#125;</div><div class="line">    <span class="keyword">return</span> s * a;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">count</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> (r &gt;= l ? s[r] - s[l - <span class="number">1</span>] : <span class="number">0</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> n = read();</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) s[i] = read() + s[i - <span class="number">1</span>];</div><div class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i++) res = max(res, i - count(<span class="number">1</span>, i) + count(i + <span class="number">1</span>, n));</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span> * <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, res);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>#<center><a href="http://codeforces.com/problemset/problem/846/B" target="_blank" rel="external">846B. Math Show</a></center></p><p>##题意<br>给定$n$个大题，每个大题都有$k$个小题，第$i$个小题需要花费$t_i$分钟。每做出一小题得$1$分，每做出完整的一个大题多得一分，即$k+1$分。求在$M$分钟完成的最大得分。</p><p>##题解<br>先枚举完整做出的大题数，再按每小题花费时间的<strong>贪心</strong>即可。<br>时间复杂度：$\Theta(n^2\times k)$。</p><p>##代码<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">59</span>;</div><div class="line"><span class="keyword">int</span> t[N];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> s = <span class="number">1</span>, a = <span class="number">0</span>; <span class="keyword">char</span> ch = getchar();</div><div class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) s = <span class="number">-1</span>; ch = getchar();&#125;</div><div class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">'0'</span> &amp;&amp; ch &lt;= <span class="string">'9'</span>) &#123;a = a * <span class="number">10</span> + ch - <span class="string">'0'</span>; ch = getchar();&#125;</div><div class="line">    <span class="keyword">return</span> s * a;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> n = read(), k = read(), m = read(), s = <span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= k; i++) t[i] = read(), s += t[i];</div><div class="line">    sort(t + <span class="number">1</span>, t + k + <span class="number">1</span>);</div><div class="line">    ll res = <span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i++) &#123;</div><div class="line">        ll tim = i * s, cur = i * (k + <span class="number">1</span>);</div><div class="line">        <span class="keyword">if</span> (tim &gt; m) <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= k; j++) &#123;</div><div class="line">            <span class="keyword">if</span> (tim + (n - i) * t[j] &lt;= m) tim += (n - i) * t[j], cur += (n - i);</div><div class="line">            <span class="keyword">else</span> &#123;</div><div class="line">                <span class="keyword">while</span> (tim + t[j] &lt;= m) tim += t[j], cur++;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        res = max(res, cur);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span> * <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, res);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>#<center><a href="http://codeforces.com/problemset/problem/846/C" target="_blank" rel="external">846C. Four Segments</a></center></p><p>##题意<br>给定长度为$n$的数列$a_0,a<em>1,…,a</em>{n-1}$，定义$sum(l,r)$为区间$[l,r)$内$a_i$的和。求三个数$delim_0,delim_1,delim_2(0\leq delim_0\leq delim_1\leq delim_2<br>\leq n)$将数列分成四段，使得$res=sum(0,delim_0)-sum(delim_0,delim_1)+sum(delim_1,delim_2)-sum(delim_2,n)$最大。</p><p>##题解<br>考虑先枚举$delim_1$定下来，再在区间$[0,delim_1]$和$[delim_1,n]$中分别枚举$delim_0$和$delim_2$，这时只要让$sum(0,d_0)$和$sum(d1,d2)$同时取最大，用<strong>前缀和</strong>加速即可。<br>时间复杂度：$\Theta(n^2)$。</p><p>##代码<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> DE(x) cout &lt;&lt; x &lt;&lt; endl</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5009</span>;</div><div class="line"><span class="keyword">int</span> a[N];</div><div class="line">ll s[N];</div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Sol</span> &#123;</span></div><div class="line">    <span class="keyword">int</span> d0, d1, d2;</div><div class="line">    ll res;</div><div class="line">&#125;;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> s = <span class="number">1</span>, a = <span class="number">0</span>; <span class="keyword">char</span> ch = getchar();</div><div class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) s = <span class="number">-1</span>; ch = getchar();&#125;</div><div class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">'0'</span> &amp;&amp; ch &lt;= <span class="string">'9'</span>) &#123;a = a * <span class="number">10</span> + ch - <span class="string">'0'</span>; ch = getchar();&#125;</div><div class="line">    <span class="keyword">return</span> s * a;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">sum</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (l &lt; <span class="number">0</span>) <span class="keyword">return</span> s[r - <span class="number">1</span>];</div><div class="line">    <span class="keyword">return</span> l &lt;= r ? s[r - <span class="number">1</span>] - s[l - <span class="number">1</span>] : <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> n = read();</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) a[i] = read();</div><div class="line">    s[<span class="number">0</span>] = a[<span class="number">0</span>];</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) s[i] = s[i - <span class="number">1</span>] + a[i];</div><div class="line">    Sol ans; ans.d0 = ans.d1 = ans.d2 = ans.res = <span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> d1 = <span class="number">0</span>; d1 &lt;= n; d1++) &#123;</div><div class="line">        <span class="keyword">int</span> d0 = d1, d2 = d1;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= d1; j++) <span class="keyword">if</span> (sum(<span class="number">0</span>, j) &gt; sum(<span class="number">0</span>, d0)) d0 = j;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = d1; j &lt;= n; j++) <span class="keyword">if</span> (sum(d1, j) &gt; sum(d1, d2)) d2 = j;</div><div class="line">        ll res = sum(<span class="number">0</span>, d0) - sum(d0, d1) + sum(d1, d2) - sum(d2, n);</div><div class="line">        <span class="keyword">if</span> (res &gt; ans.res) ans.res = res, ans.d0 = d0, ans.d1 = d1, ans.d2 = d2;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span> * <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>, ans.d0, ans.d1, ans.d2);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>#<center><a href="http://codeforces.com/problemset/problem/846/D" target="_blank" rel="external">846D. Monitor</a></center></p><p>##题意<br>给定一$n\times m$个的点阵，其中有$q$个点$(x_i,y_i)$会在$t_i$时刻变成坏点。求最少何时，存在一个$k\times k$的点阵全是坏点。</p><p>##题解<br><strong>二分</strong>时间，单调性显然，用<strong>二维前缀和</strong>判断是否全是坏点即可。<br>时间复杂度：$\Theta(n^2\times \log q)$。</p><p>##代码<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">509</span>;</div><div class="line"><span class="keyword">int</span> n, m, k, q, x[N*N], y[N*N], t[N*N], s[N][N];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> s = <span class="number">1</span>, a = <span class="number">0</span>; <span class="keyword">char</span> ch = getchar();</div><div class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) s = <span class="number">-1</span>; ch = getchar();&#125;</div><div class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">'0'</span> &amp;&amp; ch &lt;= <span class="string">'9'</span>) &#123;a = a * <span class="number">10</span> + ch - <span class="string">'0'</span>; ch = getchar();&#125;</div><div class="line">    <span class="keyword">return</span> s * a;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">broke</span><span class="params">(<span class="keyword">int</span> mid)</span> </span>&#123;</div><div class="line">    <span class="built_in">memset</span>(s, <span class="number">0</span>, <span class="keyword">sizeof</span>(s));</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= q; i++) <span class="keyword">if</span> (t[i] &lt;= mid) s[ x[i] ][ y[i] ] = <span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++) &#123;</div><div class="line">            s[i][j] += s[i - <span class="number">1</span>][j] + s[i][j - <span class="number">1</span>] - s[i - <span class="number">1</span>][j - <span class="number">1</span>];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = k; i &lt;= n; i++) &#123;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = k; j &lt;= m; j++) &#123;</div><div class="line">            <span class="keyword">if</span> (s[i][j] - s[i - k][j] - s[i][j - k] + s[i - k][j - k] == k * k) <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    n = read(), m = read(), k = read(), q = read();</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= q; i++) x[i] = read(), y[i] = read(), t[i] = read(), t[<span class="number">0</span>] = max(t[<span class="number">0</span>], t[i]);</div><div class="line">    <span class="keyword">int</span> l = <span class="number">-1</span>, r = t[<span class="number">0</span>] + <span class="number">1</span>, res = <span class="number">-1</span>;</div><div class="line">    <span class="keyword">while</span> (l + <span class="number">1</span> &lt; r) &#123;</div><div class="line">        <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> (broke(mid)) r = mid, res = r; <span class="keyword">else</span> l = mid;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span> * <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, res);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>#<center><a href="http://codeforces.com/problemset/problem/846/E" target="_blank" rel="external">846E. Chemistry in Berland</a></center></p><p>##题意<br>给定$n$个物品，现各有$b_i$千克，各需要$a_i$千克。其中$k_i$千克的$x_i$物品可以转化成$1$千克的$i$物品，$1$千克的$i$物品可以转化成$1$千克的$x_i$物品。判断能否通过转化使得$n$种物品都满足需求。</p><p>##题解<br>树形$DP$。按着题目所述转化条件转移状态即可。注意数据范围。<br>时间复杂度：$\Theta(n)$。</p><p>##代码<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span>+<span class="number">9</span>;</div><div class="line">ll sum, a[N], b[N], x[N], k[N];</div><div class="line"><span class="built_in">vector</span>&lt;pll&gt; g[N];</div><div class="line"><span class="keyword">bool</span> flag = <span class="number">1</span>;</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</div><div class="line">    ll s = <span class="number">1</span>, a = <span class="number">0</span>; <span class="keyword">char</span> ch = getchar();</div><div class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) s = <span class="number">-1</span>; ch = getchar();&#125;</div><div class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">'0'</span> &amp;&amp; ch &lt;= <span class="string">'9'</span>) &#123;a = a * <span class="number">10</span> + ch - <span class="string">'0'</span>; ch = getchar();&#125;</div><div class="line">    <span class="keyword">return</span> s * a;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> e : g[u]) &#123;</div><div class="line">        <span class="keyword">int</span> k = e.first, v = e.second;</div><div class="line">        dfs(v);</div><div class="line">        <span class="keyword">if</span> (b[v] &gt; <span class="number">0</span>) b[u] += b[v];</div><div class="line">        <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">double</span> w = <span class="number">1.0</span> * b[v] * k;</div><div class="line">            <span class="keyword">if</span> (b[u] + w &lt; -sum) flag = <span class="number">0</span>;</div><div class="line">            b[u] += b[v] * k;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> n = read();</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) b[i] = read(), sum += b[i];</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) a[i] = read(), b[i] -= a[i];</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</div><div class="line">        <span class="keyword">int</span> x = read(), k = read();</div><div class="line">        g[x].push_back(make_pair(k, i));</div><div class="line">    &#125;</div><div class="line">    dfs(<span class="number">1</span>);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span> * <span class="built_in">puts</span>(b[<span class="number">1</span>] &gt;= <span class="number">0</span> ? <span class="string">"YES"</span> : <span class="string">"NO"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>#<center><a href="http://codeforces.com/problemset/problem/846/F" target="_blank" rel="external">846F. Random Query</a></center></p><p>##题意<br>给定$n$个正整数$a_i$，每次随机地选择两个数$l,r$（若$l&gt;r$，则交换两者），定义$(l,r)$的$value$为$a<em>l,a</em>{l+1},…,a_r$中不同的数的个数。求$value$的期望。</p><p>##题解<br>我们考虑计算$a<em>l,a</em>{l+1},…,a_r$中每个数第一次出现的位置。记$pre[i]$表示$i$之前与$a_i$相等的最近的一个数的位置，则$a<em>i$能对所有$l\in (pre[i],i],r\in [i,n]$的所有区间产生$1$个贡献。<br>故所求期望为$res=\frac{2*\sum</em>{i=1}^{n}{(i-pre[i])(n-i+1)}-n}{n^2}$。<br>时间复杂度：$\Theta(n)$。</p><p>##代码<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">9</span>;</div><div class="line"><span class="keyword">int</span> a[N], pos[N], pre[N];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> s = <span class="number">1</span>, a = <span class="number">0</span>; <span class="keyword">char</span> ch = getchar();</div><div class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) s = <span class="number">-1</span>; ch = getchar();&#125;</div><div class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">'0'</span> &amp;&amp; ch &lt;= <span class="string">'9'</span>) &#123;a = a * <span class="number">10</span> + ch - <span class="string">'0'</span>; ch = getchar();&#125;</div><div class="line">    <span class="keyword">return</span> s * a;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> n = read();</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) a[i] = read(), pre[i] = pos[ a[i] ], pos[ a[i] ] = i;</div><div class="line">    ll res = <span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) res += <span class="number">1l</span>l * (i - pre[i]) * (n - i + <span class="number">1</span>);</div><div class="line">    res = res * <span class="number">2</span> - n;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span> * <span class="built_in">printf</span>(<span class="string">"%.6lf\n"</span>, <span class="number">1.0</span> *  res / (<span class="number">1l</span>l * n * n));</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#&lt;center&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/846/A&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;846A. Curriculum Vitae&lt;/a&gt;&lt;/center&gt;&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="Codeforces" scheme="http://jstztzy.github.io/tags/Codeforces/"/>
    
  </entry>
  
</feed>
